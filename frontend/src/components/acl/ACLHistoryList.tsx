import {
  Box,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
  Typography,
} from "@mui/material";
import React, { FC } from "react";

import { ACLHistory } from "../../apiclient/autogenerated";
import { AclNameById } from "../../services/ACLUtil";
import { formatDate } from "../../services/DateUtil";
import { AironeTableHeadCell } from "../common/AironeTableHeadCell";
import { AironeTableHeadRow } from "../common/AironeTableHeadRow";

interface Props {
  histories: Array<ACLHistory>;
}

export const ACLHistoryList: FC<Props> = ({ histories }) => {
  return (
    <Box>
      <Table>
        <TableHead>
          <AironeTableHeadRow>
            <AironeTableHeadCell>変更内容</AironeTableHeadCell>
            <AironeTableHeadCell>実行日時</AironeTableHeadCell>
            <AironeTableHeadCell>実行者</AironeTableHeadCell>
          </AironeTableHeadRow>
        </TableHead>

        <TableBody>
          {histories.map((history) => (
            <TableRow key={history.id}>
              <TableCell>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell>対象</TableCell>
                      <TableCell>変更前</TableCell>
                      <TableCell>変更後</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {history.changes.map((change) => (
                      <TableRow key={change.target}>
                        {(() => {
                          switch (change.target) {
                            case "is_public":
                              return (
                                <>
                                  <TableCell>公開設定</TableCell>
                                  <TableCell>
                                    {(change.before as boolean | undefined) ??
                                    true
                                      ? "公開"
                                      : "限定公開"}
                                  </TableCell>
                                  <TableCell>
                                    {(change.after as boolean | undefined) ??
                                    true
                                      ? "公開"
                                      : "限定公開"}
                                  </TableCell>
                                </>
                              );
                            case "default_permission":
                              return (
                                <>
                                  <TableCell>デフォルト権限</TableCell>
                                  <TableCell>
                                    {change.before != null
                                      ? AclNameById(change.before as number) ??
                                        "不明"
                                      : "値なし"}
                                  </TableCell>
                                  <TableCell>
                                    {change.after != null
                                      ? AclNameById(change.after as number) ??
                                        "不明"
                                      : "値なし"}
                                  </TableCell>
                                </>
                              );
                            default:
                              return (
                                <>
                                  <TableCell>{change.target}</TableCell>
                                  <TableCell>
                                    {change.before != null
                                      ? AclNameById(change.before as number) ??
                                        "不明"
                                      : "値なし"}
                                  </TableCell>
                                  <TableCell>
                                    {change.after != null
                                      ? AclNameById(change.after as number) ??
                                        "不明"
                                      : "値なし"}
                                  </TableCell>
                                </>
                              );
                          }
                        })()}
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableCell>
              <TableCell>{formatDate(history.time)}</TableCell>
              <TableCell>
                {history.user != null ? (
                  <Typography>{history.user.username}</Typography>
                ) : (
                  <Typography>不明</Typography>
                )}
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </Box>
  );
};
