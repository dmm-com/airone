/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface EntityDetailAttribute
 */
export interface EntityDetailAttribute {
  /**
   *
   * @type {number}
   * @memberof EntityDetailAttribute
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof EntityDetailAttribute
   */
  index: number;
  /**
   *
   * @type {string}
   * @memberof EntityDetailAttribute
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof EntityDetailAttribute
   */
  type: number;
  /**
   *
   * @type {boolean}
   * @memberof EntityDetailAttribute
   */
  isMandatory: boolean;
  /**
   *
   * @type {boolean}
   * @memberof EntityDetailAttribute
   */
  isDeleteInChain: boolean;
  /**
   *
   * @type {boolean}
   * @memberof EntityDetailAttribute
   */
  isWritable: boolean;
  /**
   *
   * @type {Array<{ [key: string]: any; }>}
   * @memberof EntityDetailAttribute
   */
  referral: Array<{ [key: string]: any }>;
}

/**
 * Check if a given object implements the EntityDetailAttribute interface.
 */
export function instanceOfEntityDetailAttribute(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "index" in value;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "type" in value;
  isInstance = isInstance && "isMandatory" in value;
  isInstance = isInstance && "isDeleteInChain" in value;
  isInstance = isInstance && "isWritable" in value;
  isInstance = isInstance && "referral" in value;

  return isInstance;
}

export function EntityDetailAttributeFromJSON(
  json: any
): EntityDetailAttribute {
  return EntityDetailAttributeFromJSONTyped(json, false);
}

export function EntityDetailAttributeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityDetailAttribute {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    index: json["index"],
    name: json["name"],
    type: json["type"],
    isMandatory: json["is_mandatory"],
    isDeleteInChain: json["is_delete_in_chain"],
    isWritable: json["is_writable"],
    referral: json["referral"],
  };
}

export function EntityDetailAttributeToJSON(
  value?: EntityDetailAttribute | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    index: value.index,
    name: value.name,
    type: value.type,
    is_mandatory: value.isMandatory,
    is_delete_in_chain: value.isDeleteInChain,
    is_writable: value.isWritable,
    referral: value.referral,
  };
}
