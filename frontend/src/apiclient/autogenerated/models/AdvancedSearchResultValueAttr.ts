/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EntryAttributeValue } from "./EntryAttributeValue";
import {
  EntryAttributeValueFromJSON,
  EntryAttributeValueFromJSONTyped,
  EntryAttributeValueToJSON,
} from "./EntryAttributeValue";

/**
 *
 * @export
 * @interface AdvancedSearchResultValueAttr
 */
export interface AdvancedSearchResultValueAttr {
  /**
   *
   * @type {number}
   * @memberof AdvancedSearchResultValueAttr
   */
  type: number;
  /**
   *
   * @type {EntryAttributeValue}
   * @memberof AdvancedSearchResultValueAttr
   */
  value: EntryAttributeValue;
  /**
   *
   * @type {boolean}
   * @memberof AdvancedSearchResultValueAttr
   */
  isReadable: boolean;
}

/**
 * Check if a given object implements the AdvancedSearchResultValueAttr interface.
 */
export function instanceOfAdvancedSearchResultValueAttr(
  value: object
): boolean {
  let isInstance = true;
  isInstance = isInstance && "type" in value;
  isInstance = isInstance && "value" in value;
  isInstance = isInstance && "isReadable" in value;

  return isInstance;
}

export function AdvancedSearchResultValueAttrFromJSON(
  json: any
): AdvancedSearchResultValueAttr {
  return AdvancedSearchResultValueAttrFromJSONTyped(json, false);
}

export function AdvancedSearchResultValueAttrFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AdvancedSearchResultValueAttr {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    type: json["type"],
    value: EntryAttributeValueFromJSON(json["value"]),
    isReadable: json["is_readable"],
  };
}

export function AdvancedSearchResultValueAttrToJSON(
  value?: AdvancedSearchResultValueAttr | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    type: value.type,
    value: EntryAttributeValueToJSON(value.value),
    is_readable: value.isReadable,
  };
}
