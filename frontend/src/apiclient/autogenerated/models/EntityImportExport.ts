/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface EntityImportExport
 */
export interface EntityImportExport {
  /**
   *
   * @type {number}
   * @memberof EntityImportExport
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof EntityImportExport
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof EntityImportExport
   */
  note?: string;
  /**
   *
   * @type {number}
   * @memberof EntityImportExport
   */
  status?: number;
  /**
   *
   * @type {string}
   * @memberof EntityImportExport
   */
  createdUser?: string;
}

/**
 * Check if a given object implements the EntityImportExport interface.
 */
export function instanceOfEntityImportExport(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function EntityImportExportFromJSON(json: any): EntityImportExport {
  return EntityImportExportFromJSONTyped(json, false);
}

export function EntityImportExportFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityImportExport {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    name: !exists(json, "name") ? undefined : json["name"],
    note: !exists(json, "note") ? undefined : json["note"],
    status: !exists(json, "status") ? undefined : json["status"],
    createdUser: !exists(json, "created_user")
      ? undefined
      : json["created_user"],
  };
}

export function EntityImportExportToJSON(
  value?: EntityImportExport | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    note: value.note,
    status: value.status,
    created_user: value.createdUser,
  };
}
