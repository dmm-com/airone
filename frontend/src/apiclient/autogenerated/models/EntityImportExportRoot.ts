/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EntityAttrImportExport } from "./EntityAttrImportExport";
import {
  EntityAttrImportExportFromJSON,
  EntityAttrImportExportFromJSONTyped,
  EntityAttrImportExportToJSON,
} from "./EntityAttrImportExport";
import type { EntityImportExport } from "./EntityImportExport";
import {
  EntityImportExportFromJSON,
  EntityImportExportFromJSONTyped,
  EntityImportExportToJSON,
} from "./EntityImportExport";

/**
 *
 * @export
 * @interface EntityImportExportRoot
 */
export interface EntityImportExportRoot {
  /**
   *
   * @type {Array<EntityImportExport>}
   * @memberof EntityImportExportRoot
   */
  entity: Array<EntityImportExport>;
  /**
   *
   * @type {Array<EntityAttrImportExport>}
   * @memberof EntityImportExportRoot
   */
  entityAttr: Array<EntityAttrImportExport>;
}

/**
 * Check if a given object implements the EntityImportExportRoot interface.
 */
export function instanceOfEntityImportExportRoot(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "entity" in value;
  isInstance = isInstance && "entityAttr" in value;

  return isInstance;
}

export function EntityImportExportRootFromJSON(
  json: any
): EntityImportExportRoot {
  return EntityImportExportRootFromJSONTyped(json, false);
}

export function EntityImportExportRootFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityImportExportRoot {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    entity: (json["Entity"] as Array<any>).map(EntityImportExportFromJSON),
    entityAttr: (json["EntityAttr"] as Array<any>).map(
      EntityAttrImportExportFromJSON
    ),
  };
}

export function EntityImportExportRootToJSON(
  value?: EntityImportExportRoot | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    Entity: (value.entity as Array<any>).map(EntityImportExportToJSON),
    EntityAttr: (value.entityAttr as Array<any>).map(
      EntityAttrImportExportToJSON
    ),
  };
}
