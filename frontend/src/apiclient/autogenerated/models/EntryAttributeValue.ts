/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EntryAttributeValueGroup } from "./EntryAttributeValueGroup";
import {
  EntryAttributeValueGroupFromJSON,
  EntryAttributeValueGroupFromJSONTyped,
  EntryAttributeValueGroupToJSON,
} from "./EntryAttributeValueGroup";
import type { EntryAttributeValueObject } from "./EntryAttributeValueObject";
import {
  EntryAttributeValueObjectFromJSON,
  EntryAttributeValueObjectFromJSONTyped,
  EntryAttributeValueObjectToJSON,
} from "./EntryAttributeValueObject";
import type { EntryAttributeValueRole } from "./EntryAttributeValueRole";
import {
  EntryAttributeValueRoleFromJSON,
  EntryAttributeValueRoleFromJSONTyped,
  EntryAttributeValueRoleToJSON,
} from "./EntryAttributeValueRole";

/**
 *
 * @export
 * @interface EntryAttributeValue
 */
export interface EntryAttributeValue {
  /**
   *
   * @type {EntryAttributeValueObject}
   * @memberof EntryAttributeValue
   */
  asObject?: EntryAttributeValueObject | null;
  /**
   *
   * @type {string}
   * @memberof EntryAttributeValue
   */
  asString?: string;
  /**
   *
   * @type {{ [key: string]: EntryAttributeValueObject; }}
   * @memberof EntryAttributeValue
   */
  asNamedObject?: { [key: string]: EntryAttributeValueObject };
  /**
   *
   * @type {Array<EntryAttributeValueObject>}
   * @memberof EntryAttributeValue
   */
  asArrayObject?: Array<EntryAttributeValueObject>;
  /**
   *
   * @type {Array<string>}
   * @memberof EntryAttributeValue
   */
  asArrayString?: Array<string>;
  /**
   *
   * @type {Array<{ [key: string]: EntryAttributeValueObject; }>}
   * @memberof EntryAttributeValue
   */
  asArrayNamedObject?: Array<{ [key: string]: EntryAttributeValueObject }>;
  /**
   *
   * @type {Array<EntryAttributeValueGroup>}
   * @memberof EntryAttributeValue
   */
  asArrayGroup?: Array<EntryAttributeValueGroup>;
  /**
   *
   * @type {boolean}
   * @memberof EntryAttributeValue
   */
  asBoolean?: boolean;
  /**
   *
   * @type {EntryAttributeValueGroup}
   * @memberof EntryAttributeValue
   */
  asGroup?: EntryAttributeValueGroup | null;
  /**
   *
   * @type {EntryAttributeValueRole}
   * @memberof EntryAttributeValue
   */
  asRole?: EntryAttributeValueRole | null;
  /**
   *
   * @type {Array<EntryAttributeValueRole>}
   * @memberof EntryAttributeValue
   */
  asArrayRole?: Array<EntryAttributeValueRole>;
}

/**
 * Check if a given object implements the EntryAttributeValue interface.
 */
export function instanceOfEntryAttributeValue(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function EntryAttributeValueFromJSON(json: any): EntryAttributeValue {
  return EntryAttributeValueFromJSONTyped(json, false);
}

export function EntryAttributeValueFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntryAttributeValue {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    asObject: !exists(json, "as_object")
      ? undefined
      : EntryAttributeValueObjectFromJSON(json["as_object"]),
    asString: !exists(json, "as_string") ? undefined : json["as_string"],
    asNamedObject: !exists(json, "as_named_object")
      ? undefined
      : mapValues(json["as_named_object"], EntryAttributeValueObjectFromJSON),
    asArrayObject: !exists(json, "as_array_object")
      ? undefined
      : (json["as_array_object"] as Array<any>).map(
          EntryAttributeValueObjectFromJSON
        ),
    asArrayString: !exists(json, "as_array_string")
      ? undefined
      : json["as_array_string"],
    asArrayNamedObject: !exists(json, "as_array_named_object")
      ? undefined
      : json["as_array_named_object"],
    asArrayGroup: !exists(json, "as_array_group")
      ? undefined
      : (json["as_array_group"] as Array<any>).map(
          EntryAttributeValueGroupFromJSON
        ),
    asBoolean: !exists(json, "as_boolean") ? undefined : json["as_boolean"],
    asGroup: !exists(json, "as_group")
      ? undefined
      : EntryAttributeValueGroupFromJSON(json["as_group"]),
    asRole: !exists(json, "as_role")
      ? undefined
      : EntryAttributeValueRoleFromJSON(json["as_role"]),
    asArrayRole: !exists(json, "as_array_role")
      ? undefined
      : (json["as_array_role"] as Array<any>).map(
          EntryAttributeValueRoleFromJSON
        ),
  };
}

export function EntryAttributeValueToJSON(
  value?: EntryAttributeValue | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    as_object: EntryAttributeValueObjectToJSON(value.asObject),
    as_string: value.asString,
    as_named_object:
      value.asNamedObject === undefined
        ? undefined
        : mapValues(value.asNamedObject, EntryAttributeValueObjectToJSON),
    as_array_object:
      value.asArrayObject === undefined
        ? undefined
        : (value.asArrayObject as Array<any>).map(
            EntryAttributeValueObjectToJSON
          ),
    as_array_string: value.asArrayString,
    as_array_named_object: value.asArrayNamedObject,
    as_array_group:
      value.asArrayGroup === undefined
        ? undefined
        : (value.asArrayGroup as Array<any>).map(
            EntryAttributeValueGroupToJSON
          ),
    as_boolean: value.asBoolean,
    as_group: EntryAttributeValueGroupToJSON(value.asGroup),
    as_role: EntryAttributeValueRoleToJSON(value.asRole),
    as_array_role:
      value.asArrayRole === undefined
        ? undefined
        : (value.asArrayRole as Array<any>).map(EntryAttributeValueRoleToJSON),
  };
}
