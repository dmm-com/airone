/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { ACLHistoryChange } from "./ACLHistoryChange";
import {
  ACLHistoryChangeFromJSON,
  ACLHistoryChangeFromJSONTyped,
  ACLHistoryChangeToJSON,
} from "./ACLHistoryChange";
import type { ACLHistoryUser } from "./ACLHistoryUser";
import {
  ACLHistoryUserFromJSON,
  ACLHistoryUserFromJSONTyped,
  ACLHistoryUserToJSON,
} from "./ACLHistoryUser";

/**
 *
 * @export
 * @interface ACLHistory
 */
export interface ACLHistory {
  /**
   *
   * @type {number}
   * @memberof ACLHistory
   */
  id: number;
  /**
   *
   * @type {ACLHistoryUser}
   * @memberof ACLHistory
   */
  user: ACLHistoryUser;
  /**
   *
   * @type {Date}
   * @memberof ACLHistory
   */
  time: Date;
  /**
   *
   * @type {Array<ACLHistoryChange>}
   * @memberof ACLHistory
   */
  readonly changes: Array<ACLHistoryChange>;
}

/**
 * Check if a given object implements the ACLHistory interface.
 */
export function instanceOfACLHistory(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "user" in value;
  isInstance = isInstance && "time" in value;
  isInstance = isInstance && "changes" in value;

  return isInstance;
}

export function ACLHistoryFromJSON(json: any): ACLHistory {
  return ACLHistoryFromJSONTyped(json, false);
}

export function ACLHistoryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ACLHistory {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    user: ACLHistoryUserFromJSON(json["user"]),
    time: new Date(json["time"]),
    changes: (json["changes"] as Array<any>).map(ACLHistoryChangeFromJSON),
  };
}

export function ACLHistoryToJSON(value?: ACLHistory | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    user: ACLHistoryUserToJSON(value.user),
    time: value.time.toISOString(),
  };
}
