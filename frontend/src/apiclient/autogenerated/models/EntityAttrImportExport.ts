/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface EntityAttrImportExport
 */
export interface EntityAttrImportExport {
  /**
   *
   * @type {number}
   * @memberof EntityAttrImportExport
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof EntityAttrImportExport
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof EntityAttrImportExport
   */
  type?: number;
  /**
   *
   * @type {string}
   * @memberof EntityAttrImportExport
   */
  entity?: string;
  /**
   *
   * @type {boolean}
   * @memberof EntityAttrImportExport
   */
  isMandatory?: boolean;
  /**
   *
   * @type {string}
   * @memberof EntityAttrImportExport
   */
  createdUser?: string;
  /**
   *
   * @type {string}
   * @memberof EntityAttrImportExport
   */
  refer: string;
}

/**
 * Check if a given object implements the EntityAttrImportExport interface.
 */
export function instanceOfEntityAttrImportExport(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "refer" in value;

  return isInstance;
}

export function EntityAttrImportExportFromJSON(
  json: any
): EntityAttrImportExport {
  return EntityAttrImportExportFromJSONTyped(json, false);
}

export function EntityAttrImportExportFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityAttrImportExport {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    name: !exists(json, "name") ? undefined : json["name"],
    type: !exists(json, "type") ? undefined : json["type"],
    entity: !exists(json, "entity") ? undefined : json["entity"],
    isMandatory: !exists(json, "is_mandatory")
      ? undefined
      : json["is_mandatory"],
    createdUser: !exists(json, "created_user")
      ? undefined
      : json["created_user"],
    refer: json["refer"],
  };
}

export function EntityAttrImportExportToJSON(
  value?: EntityAttrImportExport | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    type: value.type,
    entity: value.entity,
    is_mandatory: value.isMandatory,
    created_user: value.createdUser,
    refer: value.refer,
  };
}
